version: '3.8'

# Define shared environment variables
x-env: &env
  NODE_ENV: development
  MONGODB_URI: mongodb://mongo:27017/cbmanager
  SESSION_SECRET: your_session_secret
  JWT_SECRET: your_jwt_secret

services:
  app:
    build:
      context: .
      target: builder  # Use builder stage for development
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debug port
    environment:
      <<: *env
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - cb-network
    depends_on:
      mongo:
        condition: service_healthy
    # Development-specific configuration
    command: npm run dev
    profiles: ["development"]

  production:
    build:
      context: .
      target: production  # Use production stage
    environment:
      <<: *env
      NODE_ENV: production
    ports:
      - "3000:3000"
    networks:
      - cb-network
    depends_on:
      mongo:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    profiles: ["production"]

  mongo:
    image: mongo:6
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db
    networks:
      - cb-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet -u root -p example localhost:27017/test | grep 1
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - cb-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

volumes:
  mongodb_data:
  redis_data:

networks:
  cb-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16